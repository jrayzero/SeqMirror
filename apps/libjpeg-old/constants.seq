# This contains all the different constants that show up

RGB_RED = 0       
RGB_GREEN = 1       
RGB_BLUE = 2       
RGB_PIXELSIZE = 3       

EXT_RGB_RED = 0
EXT_RGB_GREEN = 1
EXT_RGB_BLUE = 2
EXT_RGB_PIXELSIZE = 3

EXT_RGBX_RED = 0
EXT_RGBX_GREEN = 1
EXT_RGBX_BLUE = 2
EXT_RGBX_PIXELSIZE = 4

EXT_BGR_RED = 2
EXT_BGR_GREEN = 1
EXT_BGR_BLUE = 0
EXT_BGR_PIXELSIZE = 3

EXT_BGRX_RED = 2
EXT_BGRX_GREEN = 1
EXT_BGRX_BLUE = 0
EXT_BGRX_PIXELSIZE = 4

EXT_XBGR_RED = 3
EXT_XBGR_GREEN = 2
EXT_XBGR_BLUE = 1
EXT_XBGR_PIXELSIZE = 4

EXT_XRGB_RED = 1
EXT_XRGB_GREEN = 2
EXT_XRGB_BLUE = 3
EXT_XRGB_PIXELSIZE = 4

rgb_red = [-1, -1, RGB_RED, -1, -1, -1, EXT_RGB_RED, EXT_RGBX_RED,
           EXT_BGR_RED, EXT_BGRX_RED, EXT_XBGR_RED, EXT_XRGB_RED,
           EXT_RGBX_RED, EXT_BGRX_RED, EXT_XBGR_RED, EXT_XRGB_RED,
           -1]

rgb_green = [-1, -1, RGB_GREEN, -1, -1, -1, EXT_RGB_GREEN, EXT_RGBX_GREEN,
           EXT_BGR_GREEN, EXT_BGRX_GREEN, EXT_XBGR_GREEN, EXT_XRGB_GREEN,
           EXT_RGBX_GREEN, EXT_BGRX_GREEN, EXT_XBGR_GREEN, EXT_XRGB_GREEN,
           -1]

rgb_blue = [-1, -1, RGB_BLUE, -1, -1, -1, EXT_RGB_BLUE, EXT_RGBX_BLUE,
            EXT_BGR_BLUE, EXT_BGRX_BLUE, EXT_XBGR_BLUE, EXT_XRGB_BLUE,
            EXT_RGBX_BLUE, EXT_BGRX_BLUE, EXT_XBGR_BLUE, EXT_XRGB_BLUE,
            -1]

rgb_pixelsize = [-1, -1, RGB_PIXELSIZE, -1, -1, -1, EXT_RGB_PIXELSIZE, EXT_RGBX_PIXELSIZE,
                 EXT_BGR_PIXELSIZE, EXT_BGRX_PIXELSIZE, EXT_XBGR_PIXELSIZE, EXT_XRGB_PIXELSIZE,
                 EXT_RGBX_PIXELSIZE, EXT_BGRX_PIXELSIZE, EXT_XBGR_PIXELSIZE, EXT_XRGB_PIXELSIZE,
                 -1]

# jpeglib

DCTSIZE = 8
#DCTSIZE2 = 64 use DCTSIZE,DCTSIZE instead
NUM_QUANT_TBLS = 4  
NUM_HUFF_TBLS = 4  
NUM_ARITH_TBLS = 16 
MAX_COMPS_IN_SCAN = 4  
MAX_SAMP_FACTOR = 4  
C_MAX_BLOCKS_IN_MCU = 10

# colorspaces
JCS_UNKNOWN = 0
JCS_GRAYSCALE = 1
JCS_RGB = 2
JCS_YCbCr = 3
JCS_CMYK = 4
JCS_YCCK = 5
JCS_EXT_RGB = 6
JCS_EXT_RGBX = 7
JCS_EXT_BGR = 8
JCS_EXT_BGRX = 9
JCS_EXT_XBGR = 10
JCS_EXT_XRGB = 11
JCS_EXT_RGBA = 12
JCS_EXT_BGRA = 13
JCS_EXT_ABGR = 14
JCS_EXT_ARGB = 15
JCS_RGB565 = 16

# turbo
# TODO if compile-time assertions, could use generic type as the value and check that it is valid
# pixel formats
TJPF_RGB = 0
TJPF_BGR = 1
TJPF_RGBX = 2
TJPF_BGRX = 3
TJPF_XBGR = 4
TJPF_XRGB = 5
TJPF_GRAY = 6
TJPF_RGBA = 7
TJPF_BGRA = 8
TJPF_ABGR = 9
TJPF_ARGB = 10
TJPF_CMYK = 11
TJPF_UNKNOWN = -1

pf2cs = [JCS_EXT_RGB, JCS_EXT_BGR, JCS_EXT_RGBX, JCS_EXT_BGRX, JCS_EXT_XBGR,
         JCS_EXT_XRGB, JCS_GRAYSCALE, JCS_EXT_RGBA, JCS_EXT_BGRA, JCS_EXT_ABGR,
         JCS_EXT_ARGB, JCS_CMYK, JCS_UNKNOWN]
# TODO this could really benefit from some compile-time #if like in C
inner_cs2pf: list[int] = [TJPF_UNKNOWN, TJPF_CMYK, TJPF_UNKNOWN, TJPF_RGB, TJPF_RGBX, TJPF_BGR,
  TJPF_BGRX, TJPF_XBGR, TJPF_XRGB, TJPF_RGBA, TJPF_BGRA, TJPF_ABGR, TJPF_ARGB,
  TJPF_UNKNOWN]
# TODO these won't typecheck if I create them inline
list0: list[int] = [TJPF_RGB]
list1: list[int] = [TJPF_BGR]
list2: list[int] = [TJPF_RGBX]
list3: list[int] = [TJPF_BGRX]
list4: list[int] = [TJPF_XBGR]
list5: list[int] = [TJPF_XRGB]
list6: list[int] = [TJPF_UNKNOWN, TJPF_GRAY]
cs2pf: list[int] = list6 + \
        (list0 + inner_cs2pf if RGB_RED == 0 and RGB_GREEN == 1 and RGB_BLUE == 2 and RGB_PIXELSIZE == 3 else \
         (list1 + inner_cs2pf if RGB_RED == 2 and RGB_GREEN == 1 and RGB_BLUE == 0 and RGB_PIXELSIZE == 3 else \
          (list2 + inner_cs2pf if RGB_RED == 0 and RGB_GREEN == 1 and RGB_BLUE == 2 and RGB_PIXELSIZE == 4 else \
           (list3 + inner_cs2pf if RGB_RED == 2 and RGB_GREEN == 1 and RGB_BLUE == 0 and RGB_PIXELSIZE == 4 else \
            (list4 + inner_cs2pf if RGB_RED == 3 and RGB_GREEN == 2 and RGB_BLUE == 1 and RGB_PIXELSIZE == 4 else \
             (list5 + inner_cs2pf if RGB_RED == 1 and RGB_GREEN == 2 and RGB_BLUE == 3 and RGB_PIXELSIZE == 4 else inner_cs2pf))))))

tjPixelSize = [3, 3, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4]
tjAlphaOffset = [-1, -1, -1, -1, -1, -1, -1, 3, 3, 0, 0, -1]
tjRedOffset = [0, 2, 0, 2, 3, 1, -1, 0, 2, 3, 1, -1]
tjGreenOffset = [1, 1, 1, 1, 2, 2, -1, 1, 1, 2, 2, -1]
tjBlueOffset = [2, 0, 2, 0, 1, 3, -1, 2, 0, 1, 3, -1]

# colorspaces
TJCS_RGB = 0
TJCS_YCbCr = 1
TJCS_GRAY = 2
TJCS_CMYK = 3
TJCS_YCCK = 4

# chrominance subsampling
TJSAMP_444 = 0
TJSAMP_422 = 1
TJSAMP_420 = 2
TJSAMP_GRAY = 3
TJSAMP_440 = 4
TJSAMP_411 = 5

# flags
TJFLAG_BOTTOMUP = 2
TJFLAG_FASTUPSAMPLE = 256
TJFLAG_NOREALLOC = 1024
TJFLAG_FASTDCT = 2048
TJFLAG_ACCURATEDCT = 4096
TJFLAG_STOPONWARNING = 8192
TJFLAG_PROGRESSIVE = 16384

# errors
TJERR_WARNING = 0
TJERR_FATAL = 1

# transform ops
TJXOP_NONE = 0
TJXOP_HFLIP = 1
TJXOP_VFLIP = 2
TJXOP_TRANSPOSE = 3
TJXOP_TRANSVERSE = 4
TJXOP_ROT90 = 5
TJXOP_ROT180 = 6
TJXOP_ROT270 = 7

# transform operations

TJXOPT_PERFECT = 1
TJXOPT_TRIM = 2
TJXOPT_CROP = 4
TJXOPT_GRAY = 8
TJXOPT_NOOUTPUT = 16
TJXOPT_PROGRESSIVE = 32
TJXOPT_COPYNONE = 64    

TJNUMSAMP = 6
NUMSUBOPT = TJNUMSAMP

# jpegint.h
CSTATE_START = 100 
CSTATE_SCANNING = 101 
CSTATE_RAW_OK = 102 
CSTATE_WRCOEFS = 103 
DSTATE_START = 200 
DSTATE_INHEADER = 201 
DSTATE_READY = 202 
DSTATE_PRELOAD = 203 
DSTATE_PRESCAN = 204 
DSTATE_SCANNING = 205 
DSTATE_RAW_OK = 206 
DSTATE_BUFIMAGE = 207 
DSTATE_BUFPOST = 208 
DSTATE_RDCOEFS = 209 
DSTATE_STOPPING = 210 

COMPRESS = 1
DECOMPRESS = 2
