from  cola.block import Block

DCTSIZE = 8
#DCTSIZE2 = 64 use DCTSIZE,DCTSIZE instead
NUM_QUANT_TBLS = 4  
NUM_HUFF_TBLS = 4  
NUM_ARITH_TBLS = 16 
MAX_COMPS_IN_SCAN = 4  
MAX_SAMP_FACTOR = 4  
C_MAX_BLOCKS_IN_MCU = 10

# colorspaces
J_COLOR_SPACE_LOW = 0
J_COLOR_SPACE_HIGH = 16

class J_COLOR_SPACE:
  val: int
  def __init__(self, val: int):
    self.val = val
  def __eq__(self, other: J_COLOR_SPACE):
    return self.val == other.val
  def __eq__(self, other):
    return self.val == other
  def __ne__(self, other):
    return not self == other

JCS_UNKNOWN = J_COLOR_SPACE(0)
JCS_GRAYSCALE = J_COLOR_SPACE(1)
JCS_RGB = J_COLOR_SPACE(2)
JCS_YCbCr = J_COLOR_SPACE(3)
JCS_CMYK = J_COLOR_SPACE(4)
JCS_YCCK = J_COLOR_SPACE(5)
JCS_EXT_RGB = J_COLOR_SPACE(6)
JCS_EXT_RGBX = J_COLOR_SPACE(7)
JCS_EXT_BGR = J_COLOR_SPACE(8)
JCS_EXT_BGRX = J_COLOR_SPACE(9)
JCS_EXT_XBGR = J_COLOR_SPACE(10)
JCS_EXT_XRGB = J_COLOR_SPACE(11)
JCS_EXT_RGBA = J_COLOR_SPACE(12)
JCS_EXT_BGRA = J_COLOR_SPACE(13)
JCS_EXT_ABGR = J_COLOR_SPACE(14)
JCS_EXT_ARGB = J_COLOR_SPACE(15)
JCS_RGB565 = J_COLOR_SPACE(16)

@extend
class J_COLOR_SPACE:
  def __init__(self, val: int=0):
    assert val >= J_COLOR_SPACE_LOW and val <= J_COLOR_SPACE_HIGH
    self.val = val
  def is_ext_rgb(self):
    return self == JCS_RGB or (self >= JCS_EXT_RGB and self <= JCS_EXT_ARGB)
  def __eq__(self, other: J_COLOR_SPACE):
    return self.val == other.val
  def __ge__(self, other: J_COLOR_SPACE):
    return self.val >= other.val
  def __le__(self, other: J_COLOR_SPACE):
    return self.val <= other.val
  def __str__(self):
    return str(self.val)

# quantization tables
class JQUANT_TBL:
  quantval: Block[u16]
  sent_table: bool

  def __init__(self, sent_table: bool = False):
    self.quantval = Block[u16](DCTSIZE,DCTSIZE)
    self.sent_table = sent_table

# huffman tables
class JHUFF_TBL:
  bits: Block[u8]
  huffval: Block[u8] 
  sent_table: bool

  def __init__(self, sent_table: bool = False):
    self.bits = Block[u8](17)
    self.huffval = Block[u8](256)
    self.sent_table = sent_table  
