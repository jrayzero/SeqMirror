# There are so many different structs passed around so I'd rather wrap them all up into one
from etc import *
from jpeglib import *
from turbojpeg import *
from config import *
from cola.bitseq import *
from cola.block import *

class jpeg_compress_struct:
  in_color_space: int
  X_density: u16
  Y_density: u16
  density_unit: int
  input_components: int
  data_precision: int
  image_width: u32
  image_height: u32
  is_decompressor: bool
  quant_tbls: list[JQUANT_TBL]
  dc_huff_tbls: list[JHUFF_TBL]
  ac_huff_tbls: list[JHUFF_TBL]
  input_gamma: float
  global_state: int
  

  def __init__(self):
    self.quant_tbls = list[JQUANT_TBL](NUM_QUANT_TBLS)
    self.dc_huff_tbls = list[JHUFF_TBL](NUM_HUFF_TBLS)
    self.ac_huff_tbls = list[JHUFF_TBL](NUM_HUFF_TBLS)

class bmp_source_struct:
  bits_per_pixel: int
  use_inversion_array: bool
  colormap: Optional[Block[JSAMPLE]]
  iobuffer: Optional[Block[u8]]
  buffer: Block[JSAMPLE]

class ppm_source_struct:
  iobuffer: Block[JSAMPLE]
  pixrow: View[JSAMPLE]
  buffer_width: u64
  rescale: Optional[Block[JSAMPLE]]
  maxval: u32  

class common_source_struct:
  buffer: Optional[View[JSAMPLE]]  

class tjinstance:
  init: int
  headerRead: init
  errStr: str
  isInstanceError: bool

class CompressMaster:
  cinfo: jpeg_compress_struct
  filetype: str
  bmpinfo: Optional[bmp_source_struct]
  ppminfo: Optional[ppm_source_struct]
  commoninfo: common_source_struct
  tjinfo: Optional[tjinstance]
