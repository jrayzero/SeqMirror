from cola.block import *
from cola.bitseq import *

def pad_below(view, height, padded_height):
  for row in range(height, padded_height):
    view[0, row, :] = view[0, height-1,:]

def pad_right(view, width, padded_width):
  for col in range(width, padded_width):
    view[0, :, col] = view[0, :, width-1]

# reads whole yuv file at once
def ingest(fn, height, width, nframes):
  fd = open(fn, 'rb')
  padded_height = height if (height & 15) == 0 else height + 16 - (height & 15)
  padded_width = width if (width & 15) == 0 else width + 16 - (width & 15)
  Y = Block[int,3](nframes, padded_height, padded_width)
  U = Block[int,3](nframes, height // 2, width // 2)
  V = Block[int,3](nframes, height // 2, width // 2)
  for i in range(nframes):
    # y
    for j in range(height):
      for k in range(width):
        Y[i,j,k] = int(fd.read_u[1]())
      # pad right
      Y[0,j,width:] = Y(i,j,width-1)
    # pad below
    for r in range(height, padded_height):
      Y[0,r,:] = Y[0,height,:]
    # u
    for j in range(height//2):
      for k in range(width//2):
        U[i,j,k] = int(fd.read_u[1]())
    # v
    for j in range(height//2):
      for k in range(width//2):
        V[i,j,k] = int(fd.read_u[1]())
  fd.close()
  return Y,U,V
