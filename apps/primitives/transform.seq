def forward4x4(inp_blk, out_blk):
  # horizontal
  for r in range(4):
    p0 = inp_blk(0,r,0)
    p1 = inp_blk(0,r,1)
    p2 = inp_blk(0,r,2)
    p3 = inp_blk(0,r,3)
    t0 = p0 + p3
    t1 = p1 + p2
    t2 = p1 - p2
    t3 = p0 - p3
    out_blk[0,r,0] = t0 + t1
    out_blk[0,r,1] = (t3 << 1) + t2
    out_blk[0,r,2] = t0 - t1 
    out_blk[0,r,3] = t3 - (t2 << 1)
  # vertical
  for c in range(4):
    p0 = out_blk(0,0,c)
    p1 = out_blk(0,1,c)
    p2 = out_blk(0,2,c)
    p3 = out_blk(0,3,c)
    t0 = p0 + p3
    t1 = p1 + p2
    t2 = p1 - p2
    t3 = p0 - p3
    out_blk[0,0,c] = t0 + t1
    out_blk[0,1,c] = t2 + (t3 << 1)
    out_blk[0,2,c] = t0 - t1
    out_blk[0,3,c] = t3 - (t2 << 1)

def inverse4x4(inp_blk, out_blk):
  # horizontal
  for r in range(4):
    t0 = inp_blk(0, r, 0)
    t1 = inp_blk(0, r, 1)
    t2 = inp_blk(0, r, 2)
    t3 = inp_blk(0, r, 3)
    p0 = t0 + t2
    p1 = t0 - t2
    p2 = (t1 >> 1) - t3
    p3 = t1 + (t3 >> 1)
    out_blk[0, r, 0] = p0 + p3
    out_blk[0, r, 1] = p1 + p2
    out_blk[0, r, 2] = p1 - p2
    out_blk[0, r, 3] = p0 - p3
  # vertical
  for c in range(4):
    t0 = out_blk(0, 0, c)
    t1 = out_blk(0, 1, c)
    t2 = out_blk(0, 2, c)
    t3 = out_blk(0, 3, c)
    p0 = t0 + t2
    p1 = t0 - t2
    p2 = (t1 >> 1) - t3
    p3 = t1 + (t3 >> 1)
    out_blk[0, 0, c] = p0 + p3
    out_blk[0, 1, c] = p1 + p2
    out_blk[0, 2, c] = p1 - p2
    out_blk[0, 3, c] = p0 - p3
    
def hadamard4x4(inp_blk, out_blk):
  # horizontal
  for r in range(4):
    p0 = inp_blk(0,r,0)
    p1 = inp_blk(0,r,1)
    p2 = inp_blk(0,r,2)
    p3 = inp_blk(0,r,3)
    t0 = p0 + p3
    t1 = p1 + p2
    t2 = p1 - p2
    t3 = p0 - p3
    out_blk[0,r,0] = t0 + t1
    out_blk[0,r,1] = t3 + t2
    out_blk[0,r,2] = t0 - t1
    out_blk[0,r,3] = t3 - t2
  # vertical
  for c in range(4):
    p0 = out_blk(0,0,c)
    p1 = out_blk(0,1,c)
    p2 = out_blk(0,2,c)
    p3 = out_blk(0,3,c)
    t0 = p0 + p3
    t1 = p1 + p2
    t2 = p1 - p2
    t3 = p0 - p3
    out_blk[0,0,c] = (t0 + t1) >> 1
    out_blk[0,1,c] = (t2 + t3) >> 1
    out_blk[0,2,c] = (t0 - t1) >> 1
    out_blk[0,3,c] = (t3 - t2) >> 1

def ihadamard4x4(inp_blk,out_blk):
  # horizontal
  for r in range(4):
    t0 = inp_blk(0, r, 0)
    t1 = inp_blk(0, r, 1)
    t2 = inp_blk(0, r, 2)
    t3 = inp_blk(0, r, 3)
    p0 = t0 + t2
    p1 = t0 - t2
    p2 = t1 - t3
    p3 = t1 + t3
    out_blk[0, r, 0] = p0 + p3
    out_blk[0, r, 1] = p1 + p2
    out_blk[0, r, 2] = p1 - p2
    out_blk[0, r, 3] = p0 - p3
  # vertical
  for c in range(4):
    t0 = out_blk(0, 0, c)
    t1 = out_blk(0, 1, c)
    t2 = out_blk(0, 2, c)
    t3 = out_blk(0, 3, c)
    p0 = t0 + t2
    p1 = t0 - t2
    p2 = t1 - t3
    p3 = t1 + t3
    out_blk[0, 0, c] = (p0 + p3)
    out_blk[0, 1, c] = (p1 + p2)
    out_blk[0, 2, c] = (p1 - p2)
    out_blk[0, 3, c] = (p0 - p3)
