from cola.block import *

def check_8x8_availability(blk_8x8, slice_info: Block[int,2]):
  r,c = blk_8x8.origin()
  my_slice = slice_info(r,c)
  up_available = r > 0 and my_slice == slice_info(r-1,c)
  left_available = c > 0 and my_slice == slice_info[blk_8x8[0,-1]]()
  up_right_available = blk_8x8[-1,:16].is_in_bounds() and \
                       my_slice == slice_info[blk_8x8[-1,0]]() and \
                       my_slice == slice_info[blk_8x8[-1,8]]()
  up_left_available = blk_8x8[-1,-1].is_in_bounds() and \
                      my_slice == slice_info[blk_8x8[-1,-1]]
  return up_available,left_available,up_right_available

def intra_8x8_luma_vertical(ref_frame, pred):
  ref = ref_frame[pred]
  for i in range(8):
    pred[:,i] = ref(-1,i)

def intra_8x8_luma_horizontal(ref_frame, pred):
  ref = ref_frame[pred]
  for i in range(8):
    pred[i,:] = ref(i,-1)

def intra_8x8_luma_DC_a(ref_frame, pred):
  ref = ref_frame[pred]
  s = 8
  for i in range(8):
    s += ref(-1,i) + ref(i,-1)
  s >>= 4
  pred[:,:] = s

def intra_8x8_luma_DC_b(ref_frame, pred):
  ref = ref_frame[pred]
  s = 4
  for i in range(8):
    s += ref(i,-1)
  s >>= 3
  pred[:,:] = s

def intra_8x8_luma_DC_c(ref_frame, pred):
  ref = ref_frame[pred]
  s = 4
  for i in range(8):
    s += ref(-1,i)
  s >>= 3
  pred[:,:] = s

def intra_8x8_luma_DC_d(pred, bit_depth_y):
  pred[:,:] = 1 << (bit_depth_y - 1)

def intra_8x8_luma_diag_down_left(ref_frame, pred):
  ref = ref_frame[pred]
  for y in range(8):
    for x in range(8):
      if x == 7 and y == 7:
        pred[y,x] = (ref[-1,14] + 3 * ref[-1,15] + 2) >> 2
      else:
        pred[y,x] = (ref(-1,x+y) + 2*ref(-1,x+y+1) + ref(-1,x+y+2) + 2) >> 2

def intra_8x8_luma_diag_down_right(ref_frame, pred):
  ref = ref_frame[pred]
  for y in range(8):
    for x in range(8):
      if x > y:
        pred[y,x] = (ref(-1, x-y-2) + 2*ref(-1,x-y-1) + ref(-1,x-y) + 2) >> 2
      elif x < y:
        pred[y,x] = (ref(y-x-2,-1) + 2*ref(y-x-1,-1) + ref(y-x,-1) + 2) >> 2
      else:
        pred[y,x] = ref(-1,0) + 2

def intra_8x8_vertical_right(ref_frame, pred):
  ref = ref_frame[pred]
  for y in range(8):
    for x in range(8):
      zVR = 2*x-y
      if zVR == -1:
        pred[y,x] = (ref(0,-1) + 2*ref(-1,-1) + ref(-1,0) + 2) >> 2
      elif zVR < 0:
        pred[y,x] = (ref(y-2*x-1,-1) + 2*ref(y-2*x-2,-1) + ref(y-2*x-3,-1) + 2) >> 2
      elif zVR % 2 == 0:
        pred[y,x] = (ref(-1,x-(y>>1)-1) + ref(-1,x-(y>>1)) + 1) >> 1
      else:
        pred[y,x] = (ref(-1,x-(y>>1)-2) + 2*ref(-1,x-(y>>1)-1) + ref(-1,x-(y>>1)) + 2) >> 2

def intra_8x8_horizontal_down(ref_frame, pred):
  ref = ref_frame[pred]
  for y in range(8):
    for x in range(8):
      zHD = 2*y-x
      if zHD == -1:
        pred[y,x] = (ref(0,-1) + 2*ref(-1,-1) + ref(-1,0) + 2) >> 2
      elif zHD < 0:
        pred[y,x] = (ref(-1,x-2*y-1) + 2*ref(-1,x-2*y-2) + ref(-1,x-2*y-3) + 2) >> 2
      elif zHD % 2 == 0:
        pred[y,x] = (ref(y-(x>>1)-1,-1) + ref(y-(x>>1),-1) + 1) >> 1
      else:
        pred[y,x] = (ref(y-(x>>1)-2,-1) + 2*ref(y-(x>>1)-1,-1) + ref(y-(x>>1),-1) + 2) >> 2        

def intra_8x8_vertical_left(ref_frame, pred):
  ref = ref_frame[pred]
  for y in range(8):
    for x in range(8):
      if y % 2 == 0:
        pred[y,x] = (ref(-1,x+(y>>1)) + ref(-1,x+(y>>1)+1) + 1) >> 1
      else:
        pred[y,x] = (ref(-1,x+(y>>1)) + 2*ref(-1,x+(y>>1)+1) + ref(-1,x+(y>>1)+2) + 2) >> 1

def intra_8x8_horizontal_up(ref_frame, pred):
  ref = ref_frame[pred]
  for y in range(8):
    for x in range(8):
      zHU = x+2*y
      if zHU == 13:
        pred[y,x] = (ref(6,-1) + 3*ref(7,-1) + 2) >> 2
      elif zHU > 13:
        pred[y,x] = ref(7,-1)
      elif zHU % 2 == 0:
        pred[y,x] = (ref(y+(x>>1),-1) + ref(y+(x>>1)+1,-1) + 1) >> 1
      else:
        pred[y,x] = (ref(y+(x>>1),-1) + 2*ref(y+(x>>1)+1,-1) + ref(y+(x>>1)+2,-1) + 2) >> 2
        
